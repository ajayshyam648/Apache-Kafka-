---
version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker1:
    image: confluentinc/cp-server:7.6.0
    hostname: broker1
    container_name: broker1
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
      - 9101:9101
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost

  broker2:
    image: confluentinc/cp-server:7.6.0
    hostname: broker2
    container_name: broker2
    depends_on:
      - zookeeper
    ports:
      - 29093:29093
      - 9093:9093
      - 9201:9201
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9201
      KAFKA_JMX_HOSTNAME: localhost

  broker3:
    image: confluentinc/cp-server:7.6.0
    hostname: broker3
    container_name: broker3
    depends_on:
      - zookeeper
    ports:
      - 29094:29094
      - 9094:9094
      - 9301:9301
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker3:29094,PLAINTEXT_HOST://localhost:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9301
      KAFKA_JMX_HOSTNAME: localhost

  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker1
      - broker2
      - broker3
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker1:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

#  ksqldb-server:
#    image: confluentinc/cp-ksqldb-server:7.6.0
#    hostname: ksqldb-server
#    container_name: ksqldb-server
#    depends_on:
#      - broker1
#      - broker2
#      - broker3
#      - schema-registry
#    ports:
#      - 8088:8088
#    environment:
#      KSQL_CONFIG_DIR: /etc/ksqldb
#      KSQL_KSQL_EXTENSION_DIR: /etc/ksqldb/ext/
#      KSQL_LOG4J_OPTS: -Dlog4j.configuration=file:/etc/ksqldb/log4j.properties
#      KSQL_BOOTSTRAP_SERVERS: broker1:29092
#      KSQL_HOST_NAME: ksqldb-server
#      KSQL_LISTENERS: http://0.0.0.0:8088
#      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: true
#      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: true
#      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
#      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
#
#  ksqldb-cli:
#    image: confluentinc/cp-ksqldb-server:7.6.0
#    container_name: ksqldb-cli
#    depends_on:
#      - broker1
#      - ksqldb-server
#    entrypoint: /bin/sh
#    tty: true
#    environment:
#      KSQL_CONFIG_DIR: /etc/ksqldb
#
#  ksql-datagen:
#    image: confluentinc/ksqldb-examples:7.6.0
#    hostname: ksql-datagen
#    container_name: ksql-datagen
#    depends_on:
#      - ksqldb-server
#      - broker1
#      - schema-registry
#      - connect
#    command: bash -c 'echo Waiting for Kafka to be ready... && \
#                       cub kafka-ready -b broker1:29092 1 40 && \
#                       echo Waiting for Confluent Schema Registry to be ready... && \
#                       cub sr-ready schema-registry 8081 40 && \
#                       echo Waiting a few seconds for topic creation to finish... && \
#                       sleep 11 && \
#                       tail -f /dev/null'
#    environment:
#      KSQL_CONFIG_DIR: /etc/ksql
#      STREAMS_BOOTSTRAP_SERVERS: broker1:29092
#      STREAMS_SCHEMA_REGISTRY_HOST: schema-registry
#      STREAMS_SCHEMA_REGISTRY_PORT: 8081

  rest-proxy:
    image: confluentinc/cp-kafka-rest:7.6.0
    depends_on:
      - broker1
      - broker2
      - broker3
      - schema-registry
    ports:
      - 8082:8082
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'broker1:29092'
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
  connect:
    image: cnfldemos/cp-server-connect-datagen:0.6.0-7.3.0
    hostname: connect
    container_name: connect

    depends_on:
      - broker1
      - broker2
      - broker3
      - schema-registry
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker1:29092,broker2:29093,broker3:29094'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.6.0.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
    command:
      - bash
      - -c
      - |
        echo Installing Connectors
        #confluent-hub install --no-prompt debezium/debezium-connector-mysql:1.7.1
        #confluent-hub install --no-prompt jcustenborder/kafka-connect-spooldir:latest
        confluent-hub install --no-prompt mongodb/kafka-connect-mongodb:1.10.1
        #confluent-hub install --no-prompt neo4j/kafka-connect-neo4j:2.0.2
        #
        echo Launching kafka connect worker
        /etc/confluent/docker/run &
        #
        sleep infinity

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.6.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker1
      - broker2
      - broker3
      - schema-registry
      - connect

    ports:
      - 9021:9021
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker1:29092,broker2:29093,broker3:29094'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
      #CONTROL_CENTER_KSQL_KSQLDB1_URL: http://ksqldb-server:8088
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: http://localhost:8088
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mnp
#  mongo-express:
#    image: mongo-express
#    #restart: always
#    ports:
#      - 9082:8081
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: root
#      ME_CONFIG_MONGODB_ADMINPASSWORD: mnp
#      ME_CONFIG_MONGODB_URL: mongodb://root:mnp@mongo:27017/